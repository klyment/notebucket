!function(){"use strict";function a(a,t){a.otherwise("/"),t.html5Mode({enabled:!1,requireBase:!1}),t.hashPrefix("!")}function t(){FastClick.attach(document.body)}function e(a,t,e,o,s,r,n){angular.extend(this,o("DefaultController",{$scope:a,$stateParams:t,$state:e})),a.editMode=!1,a.showstatus="incomplete",a.showcolor="",a.showboard="",a.myDebounce=0,angular.element(document).ready(function(){a.initializer()}),a.tasks=JSON.parse(localStorage.getItem("saved_tasks")),a.allBoards=JSON.parse(localStorage.getItem("all_boards")),a.initializer=function(t){t="userid",a.boardref=new Firebase("https://scorching-fire-7914.firebaseio.com/"+t+"/all_boards"),a.taskref=new Firebase("https://scorching-fire-7914.firebaseio.com/"+t+"/saved_tasks"),a.feedbackref=new Firebase("https://scorching-fire-7914.firebaseio.com/feedback"),a.boarddata=s(a.boardref),a.taskdata=s(a.taskref),a.feedbackdata=s(a.feedbackref),("undefined"==typeof a.tasks||null===a.tasks)&&(a.tasks=a.taskdata),("undefined"==typeof a.allBoards||null===a.allBoards)&&(a.allBoards=a.boarddata),a.boarddata.$loaded(function(){console.log("board loaded"),localStorage.setItem("all_boards",JSON.stringify(a.allBoards)),a.defaultTaskBoard()},function(a){console.error("Error:",a)}),a.taskdata.$loaded(function(){console.log("tasks loaded"),localStorage.setItem("saved_tasks",JSON.stringify(a.tasks)),a.setLayer(300)},function(a){console.error("Error:",a)}),a.feedbackdata.$loaded(function(){console.log("feedback loaded")},function(a){console.error("Error:",a)}),window.onresize=function(t){a.setLayer(300)}},a.defaultTaskBoard=function(t){if(null!=t)for(var e=0;e<a.allBoards.length;e++)a.allBoards[e].name==t&&(a.taskBoard=a.allBoards[e]);else null!=a.allBoards?a.taskBoard=a.allBoards[0]:a.taskBoard=""},a.CreateTask=function(t,e,o){var s={},r=Date.now();s.body=e,s.status="incomplete",s.color="",s.board=o,s.id=r,s.title=t;var n={};n.board=o,n.title=t,n.body=e,n.color="",n.status="incomplete",n.id=r,a.taskdata.$add(n).then(function(t){s.$id=t.key(),s.$priority=null,console.log("New Task Created"),a.tasks.push(s),localStorage.setItem("saved_tasks",JSON.stringify(a.tasks)),a.setLayer(300)})},a.CreateBoard=function(t){var e={};e.name=t,e.status="unarchived";var o={};o.name=t,o.status="unarchived",a.boarddata.$add(o).then(function(t){e.$id=t.key(),e.$priority=null,console.log("Created board"),a.allBoards.push(e),localStorage.setItem("all_boards",JSON.stringify(a.allBoards))})},a.SendFeedback=function(t,e){a.feedbackdata.$add({guest:t,feedback:e}).then(function(){console.log("Feedback Sent")})},a.ArchiveBoard=function(t){for(var e=(a.tasks.filter(function(a){return a.board==t?(a.status="complete",a):a}),0);e<a.taskdata.length;e++)a.taskdata[e].board==t&&(a.taskdata[e].status="complete",a.taskdata.$save(a.taskdata[e]).then(function(a){console.log("Task archived.")}));for(var o=(a.allBoards.filter(function(a){return a.name==t?(a.status="archived",a):a}),0);o<a.boarddata.length;o++)a.boarddata[o].name==t&&(a.boarddata[o].status="archived",a.boarddata.$save(a.boarddata[o]).then(function(a){console.log("Board archived.")}));localStorage.setItem("all_boards",JSON.stringify(a.allBoards)),localStorage.setItem("saved_tasks",JSON.stringify(a.tasks))},a.UnarchiveBoard=function(t){for(var e=(a.tasks.filter(function(a){return a.board==t?(a.status="incomplete",a):a}),0);e<a.taskdata.length;e++)a.taskdata[e].board==t&&(a.taskdata[e].status="incomplete",a.taskdata.$save(a.taskdata[e]).then(function(a){console.log("Task unarchived.")}));for(var o=(a.allBoards.filter(function(a){return a.name==t?(a.status="unarchived",a):a}),0);o<a.boarddata.length;o++)a.boarddata[o].name==t&&(a.boarddata[o].status="unarchived",a.boarddata.$save(a.boarddata[o]).then(function(a){console.log("Board unarchived.")}));localStorage.setItem("saved_tasks",JSON.stringify(a.tasks)),localStorage.setItem("all_boards",JSON.stringify(a.allBoards))},a.UpdateBoard=function(t,e){for(var o=(a.tasks.filter(function(a){return a.board==e?(a.board=t,a):a}),0);o<a.taskdata.length;o++)a.taskdata[o].board==e&&(a.taskdata[o].board=t,a.taskdata.$save(a.taskdata[o]).then(function(a){console.log("Task Board Name Changed")}));for(var s=(a.allBoards.filter(function(a){return a.name==e?(a.name=t,a):a}),0);s<a.boarddata.length;s++)a.boarddata[s].name==e&&(a.boarddata[s].name=t,a.boarddata.$save(a.boarddata[s]).then(function(a){console.log("Board Name Changed")}));localStorage.setItem("all_boards",JSON.stringify(a.allBoards)),localStorage.setItem("saved_tasks",JSON.stringify(a.tasks))},a.UpdateTask=function(t,e,o,s,r){var n,d=(a.tasks.filter(function(a){return a.id==t?(n=a.$id,a.body=o,a.board=s,a.color=r,(a.title="")?a.title="Untitled":a.title=e,a):a}),a.taskdata.$getRecord(n));d.board=s,d.title=e,d.body=o,d.color=r,a.taskdata.$save(d).then(function(){console.log("updated")}),localStorage.setItem("saved_tasks",JSON.stringify(a.tasks)),a.setLayer(300)},a.SetTaskStatus=function(t,e){var o,s=(a.tasks.filter(function(s){return s.id==t?(o=s.$id,s.status=e,a.taskBoard=s.board,s):s}),a.taskdata.$getRecord(o));s.status=e,a.taskdata.$save(s).then(function(){console.log("Task status updated")});for(var r=(a.allBoards.filter(function(t){return t.name==a.taskBoard?(t.status="unarchived",t):t}),0);r<a.boarddata.length;r++)a.boarddata[r].name==a.taskBoard&&(a.boarddata[r].status="unarchived",a.boarddata.$save(a.boarddata[r]).then(function(a){console.log("Board unarchived.")}));localStorage.removeItem("saved_tasks"),localStorage.removeItem("all_boards"),localStorage.setItem("saved_tasks",JSON.stringify(a.tasks)),localStorage.setItem("all_boards",JSON.stringify(a.allBoards)),a.tasks=JSON.parse(localStorage.getItem("saved_tasks")),a.allBoards=JSON.parse(localStorage.getItem("all_boards")),a.setLayer(300)},a.setLayer=function(a){setTimeout(function(){for(var a=document.getElementsByClassName("task-card"),t=document.getElementsByClassName("edit-button"),e=0;e<a.length;e++)t[e].style.width=a[e].offsetWidth+"px",t[e].style.height=a[e].offsetHeight+"px"},a)},a.markAsActive=function(a){var t=a.currentTarget,e=angular.element(t);e.addClass("active");for(var o=document.getElementsByClassName("clickedItem"),s=angular.element(o).children(),r=0;r<s.length;r++)s[r]!=t&&angular.element(s[r]).removeClass("active")}}angular.module("application",["ui.router","ngAnimate","foundation","foundation.dynamicRouting","foundation.dynamicRouting.animations","firebase"]).config(a).run(t),a.$inject=["$urlRouterProvider","$locationProvider"],angular.module("application").controller("TasksController",e),e.$inject=["$scope","$stateParams","$state","$controller","$firebaseArray","$firebaseAuth","$firebaseObject"]}();